
const express = require('express')
const usermodel = require('../models/usermodel')
const bcrypt = require('bcrypt')
const jwt=require('jsonwebtoken')
const {}=require('../utils/generatetoken')
const upload=require("../config/multerconfig")
const generatetoken = require('../utils/generatetoken')



module.exports.registeruser=async(req, res) => {
    try {
        let { name, email, password } = req.body

       let u =await usermodel.findOne({email:email})
        if(u){
            return res.send("user exists")
        }
        else{

        bcrypt.genSalt(10, (err, salt) => {
            if (err) return res.send(err.message)

            bcrypt.hash(password, salt, async (err, hash) => {
                if (err) return res.send(err.message)
                else {
                    
                    let user = await usermodel.create({
                        email,
                        password: hash,
                        name,
                        

                    })
                    let token=generatetoken(user)
                     res.status(200).json({
            message: "login successful",
            token,
            user
        })

                }
            })
        })
    }
    } catch (err) {
        console.log(err.message)
        res.send(err.message)
    }
}

module.exports.loginuser=async(req,res)=>{
    let {email,password}=req.body
    let user=await usermodel.findOne({email:email})
    if(!user){
        return res.send("no user registered with this email")
    }
    bcrypt.compare(password, user.password,function(err,result){
          
          let token=generatetoken(user)
                     res.status(200).json({
            message: "login successful",
            token,
            user,
        })

                   

    })

}